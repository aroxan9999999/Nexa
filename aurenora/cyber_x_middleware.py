from datetime import datetime
from django.http import HttpResponse
from django.shortcuts import render
from django.core.cache import cache
from django.conf import settings
from .models import CyberXXBot, Country
from .ip_xx import get_country_from_ip, get_client_ip
from .lxx import lxx
from mortal_shade.zombie_error import zombie
import random
import string
import os
# aurenora/middleware.py
from django.http import HttpResponse
from django.conf import settings

from .models import CyberXXBot
from .lxx import lxx
from mortal_shade.zombie_error import zombie


LANDING_PREFIX = "landing"   # üëà –º–µ–Ω—è–µ—à—å —Ç—É—Ç –Ω–∞ —á—Ç–æ —É–≥–æ–¥–Ω–æ


class CyberDomainMiddleware:
    def __init__(self, get_response):
        self.get_response = get_response

    def _log_message(self, msg: str) -> str:
        return f"[middleware] {msg}"

    def __call__(self, request):
        current_domain = request.get_host().split(":")[0]
        lxx.info(self._log_message(f"–ó–∞–ø—Ä–æ—Å —Å –¥–æ–º–µ–Ω–∞: {current_domain}"))
        lxx.info(f"–ü–æ–ª–Ω—ã–π URL –∑–∞–ø—Ä–æ—Å–∞: {request.build_absolute_uri()}")



        parts = [p for p in request.path.strip("/").split("/") if p]

        if len(parts) >= 2 and parts[0] == LANDING_PREFIX:
            username = parts[1]
            bot = CyberXXBot.objects.filter(username=username, active=True).first()
            if not bot:
                lxx.error(self._log_message(f"–ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ username: {username}"))
                zombie.error(f"[zombie] –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ username: {username}")
                return HttpResponse(status=404)

            # –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
            request.bot = bot
            request.bot_id = bot.pk

            lxx.info(self._log_message(f"–õ–µ–Ω–¥–∏–Ω–≥: –Ω–∞–π–¥–µ–Ω –±–æ—Ç {username} (id={bot.pk})"))
            return self.get_response(request)

        # ===== –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —É—Ä–ª—ã –ø—Ä–æ–ø—É—Å–∫–∞–µ–º =====
        return self.get_response(request)
